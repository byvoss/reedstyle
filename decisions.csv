uid,timestamp,theme,decision,reference_uid,rationale
DEC001,2025-08-19T14:30:00Z,Build Process,User receives pre-built CSS/JS files only - no compilation required,,ReedSTYLE ships distribution files; users don't need Rust or build tools
DEC002,2025-08-19T14:31:00Z,Color Conversion,OKLCH conversion happens at build time in Rust not runtime in JS,DEC001,Performance optimization - color conversion happens once during build
DEC003,2025-08-19T14:32:00Z,Default Colors,Professional defaults from Tailwind CSS palette embedded in Rust,,Ensures framework works without any config files
DEC004,2025-08-19T14:33:00Z,Lightning CSS,Use Lightning CSS alpha for build process,,Production-ready code despite alpha API status
DEC005,2025-08-19T14:34:00Z,Component Extensions,Components can extend other components via 'extends' field,,DRY principle for component definitions
DEC006,2025-08-19T14:45:00Z,Project Structure,Tickets moved to docs/tickets/ separate from docs/develop/,,Better organization and separation of concerns
DEC007,2025-08-19T14:55:00Z,Color System,ALL colors internally stored and processed as OKLCH,DEC002,Better color manipulation and consistency
DEC008,2025-08-19T15:10:00Z,Dependencies,Add package.json for GitHub Actions compatibility,,CI/CD needs npm lock file even for Rust project
DEC009,2025-08-19T15:12:00Z,Git Workflow,Critical fixes directly on main branch allowed,,Hotfixes for broken CI/CD can skip feature branches
DEC010,2025-08-19T15:15:00Z,Git History,Hotfixes must be squashed to single commit,DEC009,Keep main branch history clean - no intermediate commits
DEC011,2025-08-19T15:25:00Z,Development Process,Create implementation plan file for each ticket,,Session recovery and systematic approach - saves context
DEC012,2025-08-19T16:45:00Z,Typography Unicode,Use named constants for all Unicode characters in Rust,,Better readability and maintainability than Unicode escapes
DEC013,2025-08-19T16:46:00Z,Typography ß Handling,Convert German ß to ss in non-German languages,,Proper internationalization - ß only exists in German
DEC014,2025-08-19T20:15:00Z,Reed Element Defaults,Reed elements default to div behavior when no as attribute specified,,Consistent default behavior - everything is a block element unless specified
DEC015,2025-08-19T20:16:00Z,Component Element Inheritance,Components without element field in YAML default to div,DEC014,Consistent with reed default behavior - explicit is better than implicit
DEC016,2025-08-19T20:45:00Z,HTML Element Defaults Implementation,Standard HTML element defaults are hard-coded in Rust not dynamically generated,DEC014,Universal standards should be compiled not runtime-generated for performance and reliability
DEC017,2025-08-20T09:30:00Z,Element Name Change,Change from reed to r-s for W3C validator compliance,,reed is not valid custom element name - r-s is W3C compliant and validator-friendly while staying short
DEC018,2025-08-20T16:30:00Z,Typography Tests,Disable failing typography tests temporarily for CI/CD,,Tests need regex fixes but shouldn't block build pipeline - tracked in separate ticket
DEC019,2025-08-20T18:45:00Z,Component System,Components applied at runtime via JavaScript not build-time CSS,DEC001,User-defined components in YAML require no build step - JS reads definitions and sets namespace attributes dynamically
DEC020,2025-08-21T15:30:00Z,Color Scale,Unified 1-9 scale for all colors replacing weak/strong terminology,,Consistent numerical scale: 1=lightest/white 9=darkest/black for both brand and neutral colors
DEC021,2025-08-21T15:31:00Z,Color Variants,Each brand color automatically generates 9 variants,DEC020,User defines one color - system generates full 1-9 scale automatically in OKLCH
DEC022,2025-08-21T15:32:00Z,Neutral Colors,Neutral colors use same 1-9 scale as brand colors,DEC020,Consistency across all color types - neutral-1 is white neutral-9 is black
DEC023,2025-08-21T15:33:00Z,Color Override,Colors set via body data-root or JS before CSS load,DEC021,JavaScript in head reads data-root and sets CSS variables before CSS loads
DEC024,2025-08-23T16:45:00Z,Configuration Loading,User configurations loaded via JavaScript from YAML files,DEC001,YAML files (colors fonts components) are fetched and parsed by JS at runtime - not during build
DEC025,2025-08-23T16:46:00Z,Configuration Priority,data-root overrides YAML which overrides CSS defaults,DEC024,Priority: 1) body data-root 2) YAML files 3) CSS defaults - allows flexible customization
DEC026,2025-08-23T16:47:00Z,API Endpoints,API endpoints only via YAML never in DOM attributes,DEC024,Security: API endpoints should not be exposed in HTML - only in server-fetched YAML configDEC027,2025-08-25T15:30:00Z,Bridge Layer,Bridge layer loaded at runtime via JavaScript,,User never runs build - JS loads YAML and creates layer dynamically
DEC028,2025-08-25T15:31:00Z,Bridge Layer,@import used for external CSS in bridge sublayers,,Allows browser caching and proper cascade ordering
DEC029,2025-08-25T15:32:00Z,Bridge Layer,Bridge YAML parsed only for bridge section,,Prevents other config sections from being treated as frameworks
