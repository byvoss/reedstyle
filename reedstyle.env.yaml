# ReedSTYLE Environment Configuration
# Define environments for different contexts (dev, staging, prod, etc.)
# Environments work like additional breakpoints/modifiers

environments:
  # Development Environment
  dev:
    name: "development"
    enabled: true
    # Override default values in dev
    config:
      debug: true
      sourcemaps: true
      minify: false
      verbose: true
    # Custom CSS variables for dev
    variables:
      --env-indicator: "DEV"
      --env-color: "oklch(60% 0.2 120)"  # Green for dev
    # Bridge layers active in dev
    bridge:
      bootstrap: true  # Keep old framework in dev
      
  # Staging Environment  
  staging:
    name: "staging"
    enabled: false
    config:
      debug: false
      sourcemaps: true
      minify: true
      verbose: false
    variables:
      --env-indicator: "STAGING"
      --env-color: "oklch(65% 0.2 45)"  # Orange for staging
    bridge:
      bootstrap: false  # Test without old framework
      
  # Production Environment
  prod:
    name: "production"
    enabled: false
    config:
      debug: false
      sourcemaps: false
      minify: true
      verbose: false
      optimize: maximum
    variables:
      --env-indicator: "PROD"
      --env-color: "oklch(55% 0.15 250)"  # Blue for production
    bridge:
      bootstrap: false  # No legacy code in production
      
  # Testing Environment
  test:
    name: "testing"
    enabled: false
    config:
      debug: true
      sourcemaps: false
      minify: false
      verbose: true
    variables:
      --env-indicator: "TEST"
      --env-color: "oklch(70% 0.1 0)"  # Gray for testing
    bridge:
      bootstrap: false
      
  # Custom Client Environment (Example)
  client-a:
    name: "client-a-theme"
    enabled: false
    # Override brand colors for this client
    colors:
      brand-a: "#FF0000"  # Client's red
      brand-b: "#000000"  # Client's black
    fonts:
      font-a: "'ClientFont', sans-serif"
    variables:
      --env-indicator: "CLIENT-A"
      --container-width: "1400px"  # Wider container for this client
      
  # Dark Mode Environment (Can combine with others)
  dark:
    name: "dark-mode"
    enabled: false
    colors:
      # Invert base colors for dark mode
      base-0: "#1a1a1a"    # Dark background
      base-100: "#2a2a2a"
      base-900: "#f0f0f0"  # Light text
      base-1000: "#ffffff"
    variables:
      --env-mode: "dark"
      --shadow-opacity: "0.8"  # Stronger shadows in dark mode

# Environment Combinations
# Can combine multiple environments
combinations:
  dev-dark:
    extends: [dev, dark]
    name: "development-dark"
    
  prod-client-a:
    extends: [prod, client-a]
    name: "production-client-a"
    
  staging-dark:
    extends: [staging, dark]
    name: "staging-dark"

# Environment Detection
detection:
  # Auto-detect based on domain
  auto:
    enabled: true
    rules:
      - domain: "localhost"
        environment: dev
      - domain: "*.staging.com"
        environment: staging
      - domain: "*.production.com"
        environment: prod
      - domain: "client-a.com"
        environment: client-a
        
  # Or use environment variable
  variable: REEDSTYLE_ENV
  
  # Or use query parameter for testing
  query_param: "env"  # ?env=staging

# Environment-specific Features
features:
  # Show environment indicator
  indicator:
    enabled: true
    position: "top-right"
    style: |
      position: fixed;
      top: 0;
      right: 0;
      padding: 0.5rem 1rem;
      background: var(--env-color);
      color: white;
      font-size: 0.75rem;
      z-index: 9999;
      
  # Environment-specific console messages
  console:
    enabled: true
    message: "ReedSTYLE Environment: ${environment}"
    
  # Different error handling per environment
  errors:
    dev:
      show: true
      verbose: true
    staging:
      show: true
      verbose: false
    prod:
      show: false
      verbose: false

# CSS Generation for Environments
generation:
  # How environment attributes are handled
  strategy: "attribute"  # or "class"
  
  # Attribute strategy (recommended)
  # Generates: reed[box-prod*="padding:4"]
  attribute:
    prefix: ""  # No prefix needed, environment name is the prefix
    separator: "-"
    
  # Class strategy (alternative)  
  # Generates: .env-prod reed[box*="padding:4"]
  class:
    prefix: "env-"
    
  # Priority order (higher number = higher priority)
  priority:
    base: 0           # box="padding:2"
    breakpoint: 10    # box-tablet="padding:4"
    environment: 20   # box-prod="padding:6"
    env-break: 30     # box-prod-tablet="padding:8"

# Build Output
output:
  # Generate separate CSS files per environment
  separate_files: false
  
  # Or single file with all environments
  single_file: true
  
  # File naming
  pattern: "reedstyle-${environment}.css"